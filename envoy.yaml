apiVersion: v1
kind: Namespace
metadata:
  name: httpserver
  labels:
    name: httpserver
  ---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  name: httpserver
  namespace: httpserver
spec:
  replicas: 2
  selector:
    matchLabels:
      app: httpserver
  strategy: {}
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: httpserver
        kubectl.kubernetes.io/default-logs-container: httpserver
        prometheus.io/path: /stats/prometheus
        prometheus.io/port: "15020"
        prometheus.io/scrape: "true"
        sidecar.istio.io/status: '{"initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null,"revision":"default"}'
      creationTimestamp: null
      labels:
        app: httpserver
        security.istio.io/tlsMode: istio
        service.istio.io/canonical-name: httpserver
        service.istio.io/canonical-revision: latest
    spec:
      containers:
        - env:
            - name: VERSION
              value: 1.0.0
          image: yanhuan6252/httpserver:1.0.0
          lifecycle:
            postStart:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - echo postStart. HTTPSERVER >/proc/1/fd/1
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - echo preSop. HTTPSERVER >/proc/1/fd/1 && sleep 60
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /app-health/httpserver/livez
              port: 80
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 80
            successThreshold: 1
            timeoutSeconds: 5
          name: httpserver
          ports:
            - containerPort: 80
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /app-health/httpserver/readyz
              port: 80
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 200m
              memory: 100Mi
            requests:
              cpu: 200m
              memory: 100Mi
        - args:
            - proxy
            - sidecar
            - --domain
            - $(POD_NAMESPACE).svc.cluster.local
            - --proxyLogLevel=warning
            - --proxyComponentLogLevel=misc:error
            - --log_output_level=default:info
            - --concurrency
            - "2"
          env:
            - name: JWT_POLICY
              value: third-party-jwt
            - name: PILOT_CERT_PROVIDER
              value: istiod
            - name: CA_ADDR
              value: istiod.istio-system.svc:15012
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: INSTANCE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: PROXY_CONFIG
              value: |
                {}
            - name: ISTIO_META_POD_PORTS
              value: |-
                [
                    {"containerPort":8077}
                ]
            - name: ISTIO_META_APP_CONTAINERS
              value: httpserver
            - name: ISTIO_META_CLUSTER_ID
              value: Kubernetes
            - name: ISTIO_META_INTERCEPTION_MODE
              value: REDIRECT
            - name: ISTIO_META_MESH_ID
              value: cluster.local
            - name: TRUST_DOMAIN
              value: cluster.local
            - name: ISTIO_KUBE_APP_PROBERS
              value: '{"/app-health/httpserver/livez":{"httpGet":{"path":"/healthz","port":80,"scheme":"HTTP"},"timeoutSeconds":5},"/app-health/httpserver/readyz":{"httpGet":{"path":"/healthz","port":80,"scheme":"HTTP"},"timeoutSeconds":5}}'
          image: docker.io/istio/proxyv2:1.12.1
          name: istio-proxy
          ports:
            - containerPort: 15090
              name: http-envoy-prom
              protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15021
            initialDelaySeconds: 1
            periodSeconds: 2
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 10m
              memory: 40Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1337
            runAsNonRoot: true
            runAsUser: 1337
          volumeMounts:
            - mountPath: /var/run/secrets/istio
              name: istiod-ca-cert
            - mountPath: /var/lib/istio/data
              name: istio-data
            - mountPath: /etc/istio/proxy
              name: istio-envoy
            - mountPath: /var/run/secrets/tokens
              name: istio-token
            - mountPath: /etc/istio/pod
              name: istio-podinfo
      initContainers:
        - args:
            - istio-iptables
            - -p
            - "15001"
            - -z
            - "15006"
            - -u
            - "1337"
            - -m
            - REDIRECT
            - -i
            - '*'
            - -x
            - ""
            - -b
            - '*'
            - -d
            - 15090,15021,15020
          image: docker.io/istio/proxyv2:1.12.1
          name: istio-init
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 10m
              memory: 40Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
      securityContext:
        fsGroup: 1337
      volumes:
        - emptyDir:
            medium: Memory
          name: istio-envoy
        - emptyDir: {}
          name: istio-data
        - downwardAPI:
            items:
              - fieldRef:
                  fieldPath: metadata.labels
                path: labels
              - fieldRef:
                  fieldPath: metadata.annotations
                path: annotations
          name: istio-podinfo
        - name: istio-token
          projected:
            sources:
              - serviceAccountToken:
                  audience: istio-ca
                  expirationSeconds: 43200
                  path: istio-token
        - configMap:
            name: istio-ca-root-cert
          name: istiod-ca-cert
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: httpserver
  namespace: httpserver
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8077"
spec:
  #  type: NodePort
  ports:
    - name: httpserver
      port: 8088 # 对外开放的服务端口
      targetPort: 8077 # 后方 pod 的服务端口
  selector:
    app: httpserver